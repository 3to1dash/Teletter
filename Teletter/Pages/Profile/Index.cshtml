@page "{UserId:int}"
@model Teletter.Pages.Profile.IndexModel
@{
}

<div class="row">
    <div class="col-5">
        <h2>@Model.user.UserName</h2>
        <h2>@Model.user.Email</h2>

        @if (User.Identity.IsAuthenticated)
        {
            <form method="post" id="tweetForm">
                <div class="form-group">
                    <textarea id="tweetContent" rows="5" placeholder="What's on your mind..." class="form-control"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Tweet</button>
            </form>
        }
    </div>

    <div class="col-7 profile-tweets">
        @if (!Model.tweets.Any())
        {
            <p class="no-tweets">There is no tweets!</p>
        }
        else
        {
            foreach (var tweet in Model.tweets)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">
                            @Model.user.UserName
                            <small>
                                <span class="text-muted">
                                    <time datetime="@tweet.CreatedAt">9h</time>
                                </span>
                            </small>
                        </h5>
                        <p class="card-text">@tweet.Content</p>
                        <a href="#" class="card-link">Card link</a>
                        <a href="#" class="card-link">Another link</a>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        async function postData(url = '', data = {}) {
            const content = document.getElementById('tweetContent').value;

            const options = {
                method: 'POST',
                headers: {
                    RequestVerificationToken: document.getElementsByName("__RequestVerificationToken")[0].value,
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                },
                body: JSON.stringify({ Content: content })
            };

            fetch("@Model.user.UserId", options)
                .then(response => response.json())
                .then(data => addTweet(data));
            event.preventDefault();
        }

        function addTweet(data) {
            let card = document.createElement('div');
            card.setAttribute('class', 'card mb-3');

            let cardBody = document.createElement('div');
            cardBody.setAttribute('class', 'card-body')

            let cardTitle = document.createElement('h5');
            cardTitle.setAttribute('class', 'card-title');

            let time = document.createElement('time');
            time.setAttribute('datetime', data.createdAt);
            time.innerText = "9h";

            let span = document.createElement('span');
            span.setAttribute('class', 'text-muted');
            span.append(time);

            let small = document.createElement('small');
            small.append(span);
            cardTitle.append(document.createTextNode(' @Model.user.UserName '));
            cardTitle.append(small);

            let cardText = document.createElement('p');
            cardText.setAttribute('class', 'card-text');
            cardText.innerText = data.content;

            let cardLink1 = document.createElement('a');
            cardLink1.setAttribute('href', '#')
            cardLink1.setAttribute('class', 'card-link');
            cardLink1.innerText = "Card link";

            let cardLink2 = document.createElement('a');
            cardLink2.setAttribute('href', '#')
            cardLink2.setAttribute('class', 'card-link');
            cardLink2.innerText = "Another link";

            cardBody.append(cardTitle);
            cardBody.append(cardText);
            cardBody.append(cardLink1);
            cardBody.append(cardLink2);
            card.append(cardBody);
            card.classList.add('show');

            let noTweet = document.querySelector('.no-tweets');
            if (noTweet !== null) {
                noTweet.parentNode.removeChild(noTweet);
            }

            let tweetContainer = document.querySelector('.profile-tweets');
            tweetContainer.prepend(card);
        }

        const form = document.getElementById('tweetForm');
        form.addEventListener('submit', postData);
    </script>
}
